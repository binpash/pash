# This is a reusable workflow, as defined by
# https://docs.github.com/en/actions/using-workflows/reusing-workflows
#
# Maintain this separately as the "meat" of the packaging work.  Other
# files of form packaging-*.yaml call this one from a different
# perspective.
#
# To handle the documented limitations of reusable workflows, make
# sure the near the /!\ comments match your intended repository and
# user.

name: Package for publication
on:
  workflow_call:
    inputs:
      fallback_version:
        type: string
        required: true
      git_ref:
        type: string
        required: true
      deb_version:
        type: string
        required: false
      rpm_version:
        type: string
        required: false
      pacman_tgz_version:
        type: string
        required: false
defaults:
  run:
    shell: bash
jobs:
  package-pash:
      runs-on: ubuntu-latest
      steps:
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
            logout: false
        - name: Clone PaSh
          uses: actions/checkout@v2
          with:
            ref: ${{ inputs.git_ref }}
        - name: Clone FPM
          uses: actions/checkout@v2
          with:
            repository: jordansissel/fpm
            token: ${{ secrets.GH_PAT }}
            path: scripts/package/fpm
        # I generate a script because:
        #   1. It holds job-specific information constant across package builds.
        #   2. Job steps do not preserve Bash functions because they each get their own shell.
        - name: Generate build script
          run: |
            cat >ci-build.sh <<'EOF'
            cd scripts/package
            ./deploy.sh "$1" "${2:-'${{ inputs.fallback_version }}'}" "$3"
            EOF
            chmod +x ci-build.sh
        - name: Make .deb
          run: ./ci-build.sh ubuntu '${{ inputs.deb_version }}' deb
        - name: Make .rpm
          run: ./ci-build.sh fedora '${{ inputs.rpm_version }}' rpm
        - name: Make .tar.gz (Pacman)
          run: ./ci-build.sh archlinux '${{ inputs.pacman_tgz_version }}' pacman
        - name: Upload Packages as Artifacts
          uses: actions/upload-artifact@v3
          with:
            name: Packages
            path: package/output
