argv[1] = <^A>
argv[1] = <^A>
argv[1] = <^?>
argv[1] = <^?>
argv[1] = <^A>
argv[1] = <^?>
argv[1] = <bar>
argv[1] = <^A>
argv[1] = <^?>
argv[1] = <^A>
argv[1] = <^?>
argv[1] = <abcdefgh>
argv[1] = <abcdefgh>
argv[1] = <abcdefgh>
argv[1] = <abcdefgh>
argv[1] = <abcd>
argv[1] = <abcd>
argv[1] = < >
argv[1] = <-->
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <abc>
argv[1] = <abc>
argv[1] = <abc>
argv[1] = <abc>
argv[1] = <abcdef>
argv[1] = <abcdef>
argv[1] = <^A>
argv[1] = <^?>
argv[1] = <^A>
argv[1] = <^?>
argv[1] = <^A>
argv[1] = <^?>
argv[1] = <>
argv[1] = <>
argv[1] = <>
argv[1] = <Hello world!>
argv[1] = <`>
argv[1] = <">
argv[1] = <\^A>
argv[1] = <\$>
argv[1] = <\\>
argv[1] = <a>
argv[2] = <b>
argv[1] = <^A>
argv[2] = <^?>
argv[1] = <**>
argv[1] = <\.\./*/>
argv[1] = <^A^?^A^?>
argv[1] = <^A^A>
argv[1] = <^A^?>
argv[1] = <^A^A^?>
argv[1] = <  abc>
argv[2] = <def>
argv[3] = <ghi>
argv[4] = <jkl  >
argv[1] = <  abc>
argv[2] = <def>
argv[3] = <ghi>
argv[4] = <jkl  >
argv[1] = <--abc>
argv[2] = <def>
argv[3] = <ghi>
argv[4] = <jkl-->
argv[1] = <a b>
argv[2] = <cd>
argv[3] = <ef>
argv[4] = <gh>
argv[1] = <a b>
argv[2] = <cd>
argv[3] = <ef>
argv[4] = <gh>
argv[1] = <a b>
argv[2] = <cd>
argv[3] = <ef>
argv[4] = <gh>
argv[1] = <  >
argv[1] = < - >
argv[1] = </^root:/{s/^[^:]*:[^:]*:\([^:]*\).*$/\1/>
argv[1] = <foo bar>
argv[1] = <foo>
argv[2] = <bar>
argv[1] = <abc>
argv[1] = <abc>
argv[1] = <posix>
argv[1] = <10>
argv[1] = <file.o>
argv[1] = <posix>
argv[1] = </src/cmd>
argv[1] = <three>
argv[1] = <abcdef>
argv[1] = <abcdef>
argv[1] = <abcdef>
argv[1] = <abcdef>
argv[1] = <\$x>
argv[1] = <$x>
argv[1] = <\$x>
argv[1] = <abc>
argv[2] = <def>
argv[3] = <ghi>
argv[4] = <jkl>
argv[1] = <abc def ghi jkl>
argv[1] = <abc:def ghi:jkl>
argv[1] = <abc>
argv[2] = <def ghi>
argv[3] = <jkl>
argv[1] = <xxabc>
argv[2] = <def ghi>
argv[3] = <jklyy>
argv[1] = <abc>
argv[2] = <def ghi>
argv[3] = <jklabc>
argv[4] = <def ghi>
argv[5] = <jkl>
argv[1] = <abcdef>
argv[1] = <bar>
argv[2] = <>
argv[3] = <xyz>
argv[4] = <>
argv[5] = <abc>
argv[1] = <$foo>
argv[1] = <10>
argv[1] = <newline expected>
argv[1] = <got it>
argv[1] = <got it>
argv[1] = <one>
argv[2] = <three>
argv[3] = <five>
argv[1] = <5>
argv[2] = <5>
argv[1] = <3>
argv[1] = <1>
argv[1] = <1>
argv[1] = <5>
argv[1] = <5>
argv[1] = <5>
argv[1] = <5>
argv[1] = <42>
argv[1] = <26>
argv[1] = <\>
argv[1] = <~>
argv[1] = <a>
argv[2] = <b>
argv[3] = <c>
argv[4] = <d>
argv[5] = <e>
a?b?c
a b c
argv[1] = <a>
argv[2] = <b>
argv[3] = <>
argv[1] = <^?>
argv[1] = <^?>
argv[1] = <^?>
argv[1] = <^?>
argv[1] = <^?>
argv[1] = <^?>
argv[1] = <^A>
argv[2] = <^?>
argv[1] = <^A^?>
argv[1] = <^A^?^A^?>
argv[1] = <^A^A^?>
0.net
0.net0

0.net
0.net
0.net
graph
yes
a
a
 val
val
 val
no arg passed
hello
[0;31m\]
]
[hello
\[\e[0;31m\]

hello
eo
argv[1] = <a>
argv[1] = <a>
argv[1] = <^?>
argv[1] = <^?b>
argv[1] = <b^?>
argv[1] = <c>
argv[1] = <c>
argv[1] = <c>
argv[1] = <c>
argv[1] = <c>
argv[1] = <c>
argv[1] = <correct>
argv[2] = <>
argv[1] = <correct>
argv[2] = <>
argv[1] = <correct>
argv[2] = <>
argv[1] = <XwrongX>
argv[2] = <>
argv[1] = <correct>
argv[2] = <a>
argv[1] = <XwrongX>
argv[2] = <a>
argv[1] = <correct>
argv[2] = <a>
argv[1] = <correct>
argv[2] = <a>
argv[1] = <^A>
argv[1] = <3>
argv[2] = <^C>
argv[3] = <^C>
argv[4] = <^C>
argv[1] = <^A>
argv[1] = <XY>
argv[2] = <YX>
argv[1] = <XY^AYX>
argv[1] = <XY>
argv[2] = <Y>
argv[1] = <XY^AY>
argv[1] = <x^Ay^?z>
argv[1] = <x^Ay^?z>
declare -- var=$'x\001y\177z'
argv[1] = <declare>
argv[2] = <-->
argv[3] = <var=$'x\001y\177z'>
var=x\001y\177z$
declare -- var="x\001y\177z"$
argv[1] = <$'x\001y\177z'>
argv[1] = <x^Ay^?z>
var=$'x\001y\177z'
./exp8.sub: line 30: xyz: syntax error: invalid arithmetic operator (error token is "z")
declare -a array=()
declare -a array=([0]=$'x\001y\177z')
argv[1] = <x^Ay^?z>
declare -a array=([0]=$'x\001y\177z')
declare -A array=([$'x\001y\177z']=$'a\242b\002c' )
abc
def
ghi
jkl
abc def ghi jkl
xxabc
def
ghi
jklyy
xxabc def ghi jklyy
abc
def
ghi
jkl
abc
def ghi
jkl
abc
def ghi
jkl
abc
def ghi
jkl
xxabc
def
ghi
jklyy
xxabc
def ghi
jklyy
abc
def
ghi
jklabc
def
ghi
jkl
abc
def ghi
jklabc
def ghi
jkl
abc:def ghi:jkl
abc:def ghi:jkl
abc:def ghi:jkl
abc
def ghi
jkl
abc:def ghi:jkl
abc:def ghi:jkl
abc
def ghi
jkl
var=abc:def ghi:jkl
abc:def ghi:jkl
var=abc:def ghi:jkl
abcdef ghijkl
abcdef ghijkl
abcdef ghijkl
abc
def ghi
jkl
abcdef ghijkl
abcdef ghijkl
abcdef ghijkl
var=abcdef ghijkl
abcdef ghijkl
var=abcdef ghijkl
abc
def ghi
jkl
abc def ghi jkl
abc def ghi jkl
abc def ghi jkl
abc
def
ghi
jkl
abc def ghi jkl
abc def ghi jkl
abc
def
ghi
jkl
var=abc def ghi jkl
abc def ghi jkl
var=abc def ghi jkl
abc
def ghi
jkl
[foo]
[]
[foo]
[]
[foo]
[foo]
[foo]
[]
[foo]
[]
[foo]
[]
< A >< B >< A >< B >
< A >< B >< A >< B >
< A >< B >< a >< b >
< A >< B >< A >< B >
< A >< B ><' A '><' B '>
-----
< A >< B >< A >< B >
< A >< B >< A >< B >
< A >< B >< a >< b >
< A >< B >< A >< B >
< A >< B ><' A '><' B '>
argv[1] = <1>
argv[2] = <2>
argv[1] = <1>
argv[2] = <2>
argv[1] = <1>
argv[2] = <2>
argv[1] = <1 2>
argv[1] = <a b>
argv[1] = <a>
argv[2] = <b>
argv[1] = <a b>
argv[1] = <1>
argv[2] = <2>
argv[1] = <1>
argv[2] = <2>
argv[1] = <1>
argv[2] = <2>
argv[1] = <12>
argv[1] = <12>
argv[1] = <1>
argv[2] = <2>
argv[1] = <1>
argv[2] = <2>
argv[1] = < >
argv[1] = < >
argv[1] = < >
argv[1] = < >
argv[1] = < >
argv[1] = <12>
argv[1] = <12>
argv[1] = <12>
argv[1] = <12>
ok 1
ok 2
ok 3
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
argv[1] = <file.o>
argv[1] = <posix>
argv[1] = </src/cmd>
argv[1] = <three>
argv[1] = </one/two/three>
abcdefg
abcdefg
abcdefg
abcdefg
cdefg
abcdefg
abcde
abcdefg
foo
declare -- a="foo"
7
declare -i a="7"
42
declare -- a="42"
FOO
declare -u A="FOO"
